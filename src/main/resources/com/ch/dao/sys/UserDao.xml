<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ch.dao.sys.UserDao">

    <!-- user -->
    <resultMap id="UserResult" type="com.ch.entity.sys.User">
        <id column="id" property="id" />
        <result column="login_name" property="loginName" />
        <result column="nick_name" property="nickName" />
        <result column="password" property="password" />
        <result column="salt" property="salt" />
        <result column="status" property="status" />
        <result column="remark" property="remark" />
        <result column="created_date" property="createdDate" />
        <result column="updated_date" property="updatedDate" />
    </resultMap>

    <!-- user with role -->
    <resultMap id="UserRoleResult" type="com.ch.entity.sys.User" extends="UserResult">
        <collection property="roles" ofType="com.ch.entity.sys.Role">
            <id column="role_id" property="id" />
            <result column="role_name" property="name" />
            <result column="role_remark" property="remark" />
            <result column="role_created_date" property="createdDate" />
            <result column="role_updated_date" property="updatedDate" />
        </collection>
    </resultMap>

    <insert id="insert" parameterType="com.ch.entity.sys.User" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO sys_user (
            `login_name`,
            `nick_name`,
            `password`,
            `salt`,
            `status`,
            `remark`,
            `created_date`
        ) VALUES (
            #{loginName},
            #{nickName},
            #{password},
            #{salt},
            #{status},
            #{remark},
            NOW()
        )
    </insert>

    <update id="update" parameterType="com.ch.entity.sys.User">
        UPDATE sys_user
        <set>
            <if test="loginName != null"> `login_name` = #{loginName}, </if>
            <if test="nickName != null"> `nick_name` = #{nickName}, </if>
            <if test="password != null"> `password` = #{password}, </if>
            <if test="salt != null"> `salt` = #{salt}, </if>
            <if test="status != null"> `status` = #{status}, </if>
            <if test="remark != null"> `remark` = #{remark}, </if>
            `updated_date` = NOW(),
        </set>
        WHERE id = #{id}
    </update>

    <delete id="deleteById" parameterType="java.lang.Integer">
        DELETE FROM sys_user WHERE `id` = #{id}
    </delete>

    <!-- 查询sql片段 -->
    <sql id="select_query_conditions">
        <if test="loginName != null and loginName != ''">
            AND login_name LIKE CONCAT("%",#{loginName},"%")
        </if>
        <if test="nickName != null and nickName != ''">
            AND nick_name LIKE CONCAT("%",#{nickName},"%")
        </if>
    </sql>

    <!-- 排序sql片段 -->
    <sql id="select_order_conditions">
        ORDER BY created_date DESC
    </sql>

    <select id="findById" resultMap="UserRoleResult" parameterType="com.ch.entity.sys.User">
        SELECT
          u.*,
          r.id AS role_id,
          r.name AS role_name,
          r.remark AS role_remark,
          r.created_date AS role_created_date,
          r.updated_date AS role_updated_date
        FROM
          sys_user u,
          sys_user_role ur,
          sys_role r
        WHERE
          u.id = ur.user_id AND ur.role_id = r.id AND u.id = #{id}
    </select>

    <select id="findByLoginName" resultMap="UserRoleResult" parameterType="com.ch.entity.sys.User">
        SELECT
          u.*,
          r.id AS role_id,
          r.name AS role_name,
          r.remark AS role_remark,
          r.created_date AS role_created_date,
          r.updated_date AS role_updated_date
        FROM
          sys_user u,
          sys_user_role ur,
          sys_role r
        WHERE
          u.id = ur.user_id AND ur.role_id = r.id AND u.login_name = #{loginName}
    </select>

    <select id="findAll" resultMap="UserRoleResult">
        SELECT
          u.*,
          r.id AS role_id,
          r.name AS role_name,
          r.remark AS role_remark,
          r.created_date AS role_created_date,
          r.updated_date AS role_updated_date
        FROM
          sys_user u
        LEFT JOIN sys_user_role ur ON u.id = ur.user_id
        LEFT JOIN sys_role r ON ur.role_id = r.id
        <include refid="select_query_conditions"></include>
        <include refid="select_order_conditions"></include>
    </select>

    <insert id="insertUserRole" parameterType="java.util.HashMap">
        INSERT INTO sys_user_role (`user_id`, `role_id`) VALUES
        <foreach collection="roleIds" item="roleId" separator=",">
            (#{userId}, #{roleId})
        </foreach>
    </insert>

    <delete id="deleteByUserId" parameterType="java.lang.Integer">
        DELETE FROM sys_user_role WHERE `user_id` = #{userId}
    </delete>

</mapper>

